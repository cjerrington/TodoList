{
  "version": 3,
  "file": "linux.js",
  "sourceRoot": "",
  "sources": [
    "../../src/packager/linux.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,6BAAuB,AACvB,AAAC,AADkC;AACnC,MAAY,AAAI,eAAM,AACtB,AAAC,AAD2B;AAE5B,2BAA2C,AAE3C,AAAC,AAFoD;AAErD,mBAA0B,AAA6B,MAAE,AAAiB,WAAE,AAAiC;AAC3G,AAAM,WAAC,WAAe,QAAC,AAAG,IAAC,CACzB,AAAa,AAAE,iBACf,aAAM,OAAC,AAAI,KAAC,AAAI,KAAC,AAAS,WAAE,AAAU,AAAC,aAAE,AAAI,KAAC,AAAI,KAAC,AAAS,WAAE,AAAI,KAAC,AAAO,QAAC,AAAe,AAAC,AAAC,AAC7F,AAAC,AACJ;AAAC;AALe,QAAS,YAKxB",
  "sourcesContent": [
    "import { rename } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { ElectronPackagerOptions } from \"./dirPackager\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\n\nexport function createApp(opts: ElectronPackagerOptions, appOutDir: string, initializeApp: () => Promise<any>) {\n  return BluebirdPromise.all([\n    initializeApp(),\n    rename(path.join(appOutDir, \"electron\"), path.join(appOutDir, opts.appInfo.productFilename))\n  ])\n}"
  ]
}
