{
  "version": 3,
  "file": "win32.js",
  "sourceRoot": "",
  "sources": [
    "../../src/packager/win32.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,MAAY,AAAI,eAAM,AAAM,AAC5B,AAAC;AAAD,2BAA2C,AAAU,AACrD,AAAC;AAAD,6BAAuB,AAAY,AACnC,AAAC;AAED,MAAM,AAAM,SAAQ,WAAe,QAAC,AAAS,UAAC,AAAO,QAAC,AAAQ,AAAC,AAAC;AAEhE,mBAA0B,AAA6B,MAAE,AAAiB,WAAE,AAAiC;AAC3G,UAAM,AAAU,aAAG,AAAI,KAAC,AAAI,KAAC,AAAS,AAAE,eAAG,AAAI,KAAC,AAAO,QAAC,AAAe,eAAM,AAAC;AAC9E,AAAM,sBAAgB,QAAC,AAAG,KACxB,AAAa,AAAE,8BACT,OAAC,AAAI,KAAC,AAAI,KAAC,AAAS,WAAE,AAAc,AAAC,iBAAE,AAAU,AAAC,YACrD,AAAI,KAAC;AACJ,cAAM,AAAO,UAAG,AAAI,KAAC,AAAO;AAC5B,AAAM,sBAAQ,AAAU;AACtB,AAAgB,8BAAE,AAAO,QAAC,AAAa;AACvC,AAAc,4BAAE,AAAO,QAAC,AAAY;AACpC,AAAiB,+BAAE,AAAO,QAAC,AAAO;AAClC,AAAI,kBAAE,AAAI,KAAC,AAAI,AAChB,AAAC,AACJ;AAN4B,SAAnB,AAAM;AAMd,AAAC,AACL,AAAC,AACJ,KAXI,CAFyB,CAApB;AAaR;AAfe,QAAS,YAexB",
  "sourcesContent": [
    "import * as path from \"path\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport { rename } from \"fs-extra-p\"\nimport { ElectronPackagerOptions } from \"./dirPackager\"\n\nconst rcedit: any = BluebirdPromise.promisify(require(\"rcedit\"))\n\nexport function createApp(opts: ElectronPackagerOptions, appOutDir: string, initializeApp: () => Promise<any>) {\n  const newExePath = path.join(appOutDir, `${opts.appInfo.productFilename}.exe`)\n  return BluebirdPromise.all([\n    initializeApp(),\n    rename(path.join(appOutDir, \"electron.exe\"), newExePath)\n      .then(() => {\n        const appInfo = opts.appInfo\n        return rcedit(newExePath, {\n          \"version-string\": appInfo.versionString,\n          \"file-version\": appInfo.buildVersion,\n          \"product-version\": appInfo.version,\n          icon: opts.icon\n        })\n      })\n  ])\n}"
  ]
}
